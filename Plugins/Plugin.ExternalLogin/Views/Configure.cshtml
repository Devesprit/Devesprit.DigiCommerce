@using Devesprit.Utilities.Extensions
@using Devesprit.WebFramework.Helpers
@model Plugin.ExternalLogin.Models.ExternalLoginProviderSettingsModel

<div class="container">
    <div class="panel mar-v-35">
        <div class="panel-title pad-10">
            <h5 class="no-mar">@T("Plugin.ExternalLogin.Configuration")</h5>
        </div>
        <div class="fs-14 pad-20">
            @using (Html.BeginForm("Configure", "ExternalLoginProvider", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <div class="custom-control custom-checkbox">
                                @Html.CheckBoxFor(p => p.LoginWithGoogle, new { @class = "custom-control-input" })
                                @Html.LabelFor(p => p.LoginWithGoogle, new { @class = "custom-control-label" })
                            </div>
                        </div>
                        <div role="alert" class="alert alert-warning fs-12 d-inline-block">
                            @T("Plugin.ExternalLogin.AuthorizedRedirectURL") @(HttpContext.Current.Request.Url.GetHostUrl().TrimEnd('/') + "/signin-google")
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.GoogleLoginClientId)
                            @Html.TextBoxFor(p => p.GoogleLoginClientId, new { @class = "form-control form-control-sm ltr-dir" })
                            @Html.ValidationMessageFor(p => p.GoogleLoginClientId, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.GoogleLoginClientSecret)
                            @Html.TextBoxFor(p => p.GoogleLoginClientSecret, new { @class = "form-control form-control-sm ltr-dir" })
                            @Html.ValidationMessageFor(p => p.GoogleLoginClientSecret, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.GoogleDisplayOrder)
                            @Html.TextBoxFor(p => p.GoogleDisplayOrder, new { @class = "form-control form-control-sm ltr-dir", type = "number" })
                            @Html.ValidationMessageFor(p => p.GoogleDisplayOrder, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                </div>

                <hr/>

                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <div class="custom-control custom-checkbox">
                                @Html.CheckBoxFor(p => p.LoginWithFacebook, new { @class = "custom-control-input" })
                                @Html.LabelFor(p => p.LoginWithFacebook, new { @class = "custom-control-label" })
                            </div>
                        </div>
                        <div role="alert" class="alert alert-warning fs-12 d-inline-block">
                            @T("Plugin.ExternalLogin.AuthorizedRedirectURL") @(HttpContext.Current.Request.Url.GetHostUrl().TrimEnd('/') + "/signin-facebook")
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.FacebookLoginAppId)
                            @Html.TextBoxFor(p => p.FacebookLoginAppId, new { @class = "form-control form-control-sm ltr-dir" })
                            @Html.ValidationMessageFor(p => p.FacebookLoginAppId, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.FacebookLoginAppSecret)
                            @Html.TextBoxFor(p => p.FacebookLoginAppSecret, new { @class = "form-control form-control-sm ltr-dir" })
                            @Html.ValidationMessageFor(p => p.FacebookLoginAppSecret, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.FacebookDisplayOrder)
                            @Html.TextBoxFor(p => p.FacebookDisplayOrder, new { @class = "form-control form-control-sm ltr-dir", type = "number" })
                            @Html.ValidationMessageFor(p => p.FacebookDisplayOrder, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                </div>

                <hr/>

                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <div class="custom-control custom-checkbox">
                                @Html.CheckBoxFor(p => p.LoginWithTwitter, new { @class = "custom-control-input" })
                                @Html.LabelFor(p => p.LoginWithTwitter, new { @class = "custom-control-label" })
                            </div>
                        </div>
                        <div role="alert" class="alert alert-warning fs-12 d-inline-block">
                            @T("Plugin.ExternalLogin.AuthorizedRedirectURL") @(HttpContext.Current.Request.Url.GetHostUrl().TrimEnd('/') + "/signin-twitter")
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.TwitterLoginConsumerKey)
                            @Html.TextBoxFor(p => p.TwitterLoginConsumerKey, new { @class = "form-control form-control-sm ltr-dir" })
                            @Html.ValidationMessageFor(p => p.TwitterLoginConsumerKey, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.TwitterLoginConsumerSecret)
                            @Html.TextBoxFor(p => p.TwitterLoginConsumerSecret, new { @class = "form-control form-control-sm ltr-dir" })
                            @Html.ValidationMessageFor(p => p.TwitterLoginConsumerSecret, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                    <div class="col-12 col-lg-4">
                        <div class="form-group">
                            @Html.LabelFor(p => p.TwitterDisplayOrder)
                            @Html.TextBoxFor(p => p.TwitterDisplayOrder, new { @class = "form-control form-control-sm ltr-dir", type = "number" })
                            @Html.ValidationMessageFor(p => p.TwitterDisplayOrder, "", new { @class = "form-text text-danger fs-12" })
                        </div>
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" }).ToMvcHtmlString()

                <div class="text-center t-mar-20">
                    <button type="submit" class="btn btn-sm btn-warning">@T("Save")</button>
                    <button type="button" onclick="window.close();" class="btn btn-sm btn-success">@T("Close")</button>
                </div>
            }
        </div>
    </div>
</div>