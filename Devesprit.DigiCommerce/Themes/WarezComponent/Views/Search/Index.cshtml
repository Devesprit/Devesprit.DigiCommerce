@using System.Web.Mvc.Html
@using Devesprit.DigiCommerce.Models
@using Devesprit.Utilities
@using X.PagedList.Mvc
@model Devesprit.DigiCommerce.Models.Search.SearchResultModel
@{
    ViewBag.Title = Model != null ? T("SearchFor", Model.SearchTerm.Query, Model.SearchTerm.Page ?? 1) : T("NoItemFound");
    Html.AddHeadCustomParts("<meta name=\"robots\" content=\"index,follow\">");
    if (ViewBag.CanonicalUrl != null)
    {
        string url = ViewBag.CanonicalUrl.ToString();
        Html.AddCanonicalUrlParts(url);
    }
}

<!-- pro head slider -->
<header class="pro-head-slider">
    <div class="pro-head-slider-layer">
        <div class="container">
            <div class="row">
                <div class="col-12 d-flex justify-content-center">
                    <h1 class="pro-head-title pro-head-title-single no-t-mar">
                        @Html.Raw(ViewBag.Title)
                    </h1>
                </div>
                <div class="col-12">
                    <ul class="breadcrumbs">
                        <li><a href="@Url.Action("Index", "Home")">@T("Home")</a></li>
                        <li>/</li>
                        <li>@T("Search").ToHtmlString().Replace(" ...", "")</li>
                    </ul>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    @{Html.RenderPartial("Partials/_SearchBox");}
                </div>
            </div>
        </div>
    </div>
</header>

@if (Model == null || Model.NumberOfItemsFound == 0)
{
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-sm-12 col-md-9 col-lg-6">
                <div class="project-tab">
                    <div class="fs-14 pad-20">
                        <img class="m-auto d-block" src="~/Content/img/NotFound_256px.png" alt="No Item Found" />
                        <h4 class="text-center">@T("ThereAreNoResults")</h4>
                        @if (Model == null)
                        {
                            <p class="fs-16 fw-bold text-center">@T("YouNotEnteredAnySearchTerms")</p>
                        }
                        else
                        {
                            <div class="m-auto d-table">
                                @Html.Raw(T("SearchNotMatchAnyDocuments", Model.SearchTerm.Query))
                            </div>
                        }
                        <hr />
                        @if (Model?.SuggestSimilar?.Any() == true)
                        {
                            <small>
                                @T("Suggestions") :
                                @foreach (var suggest in Model.SuggestSimilar)
                                {
                                    @:&#9679; <a href="@Url.Action("Index", new {query = suggest, Page = 1})">@suggest</a>
                                }
                            </small>
                        }
                        @using (Html.BeginForm("Index", "Search", FormMethod.Get, new { @class = "text-center", novalidate = "novalidate" }))
                        {
                            <input type="hidden" name="Page" value="1" />
                            <input type="text" name="query" class="form-control form-control-sm" value="@(Model?.SearchTerm.Query)" placeholder="@T("Search")" data-val="true" data-val-required="" />
                            <button type="submit" class="btn btn-sm btn-secondary t-mar-10"><i class="fa fa-search"></i> @T("Search")</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <!-- category body -->
    <div class="container">
        <div class="row pad-v-50">
            @if (Model.ShowAdvancedSearchPanel)
            {
                <div class="col-sm-12 col-lg-4">
                    @{Html.RenderPartial("Partials/_AdvancedSearchPanel", Model.SearchTerm);}
                </div>
            }

            <div class="col-sm-12 @Html.Raw(Model.ShowAdvancedSearchPanel ? "col-lg-8" : "")">
                <h2 class="fs-18 text-muted">
                    <i class="fa fa-search"></i> @Html.Raw(T("SearchResult", Model.SearchTerm.Query, Model.SearchTerm.Page ?? 1, Model.NumberOfItemsFound.ToString("N0"), Model.TimeElapsed.ToString("N0")))
                    @if (Model.SuggestSimilar?.Any() == true)
                    {
                        <br />
                        <small>
                            @T("Suggestions") :
                            @foreach (var suggest in Model.SuggestSimilar)
                            {
                                @:&#9679; <a href="@Url.Action("Index", new {query = suggest, Page = 1})">@suggest</a>
                            }
                        </small>
                    }
                </h2>
                <hr />
                <div class="row">
                    @foreach (var post in Model.SearchResult)
                    {
                        switch (Model.CardViewStyles)
                        {
                            case ViewStyles.Large:
                                @Html.Raw("<div class='col-12 py-2'>")
                                break;
                            case ViewStyles.Normal:
                                @Html.Raw("<div class='col-12 col-sm-6 "+(Model.ShowAdvancedSearchPanel ? "" : "col-lg-4")+" py-2'>")
                                break;
                            case ViewStyles.Small:
                                @Html.Raw("<div class='col-12 col-sm-6 "+(Model.ShowAdvancedSearchPanel ? "" : "col-lg-4")+" py-2'>")
                                break;
                        }
                        {
                            Html.RenderAction("PostCardViewPartialView", "Post", new { model = post, style = Model.CardViewStyles });
                        }
                        @Html.Raw("</div>")
                    }
                </div>
                <div class="row">
                    <div class="col-12 t-mar-30">
                        @Html.PagedListPager(Model.SearchResult, GeneratePageUrl, new TwitterBootstrap4Pager())
                    </div>
                </div>
            </div>

        </div>
    </div>
}


@functions {
    private string GeneratePageUrl(int arg)
    {
        var httpContext = HttpContext.Current.GetOwinContext().Get<System.Web.HttpContextWrapper>("System.Web.HttpContextBase");
        var route = ViewContext.RouteData.Route.GetRouteData(httpContext);
        if (route.Values.Keys.Contains("page"))
        {
            var routeData = ViewContext.RouteData.Values;
            routeData["page"] = arg;
            var queryStrings = Request.Url.Query;
            return Url.RouteUrl(routeData).BuildQueryStringUrl(new []{queryStrings}).RemoveEmptyParametersFromQueryString();
        }
        return Request.Url.ToString().BuildQueryStringUrl(new[] { "page=" + arg }).RemoveEmptyParametersFromQueryString();
    }
}