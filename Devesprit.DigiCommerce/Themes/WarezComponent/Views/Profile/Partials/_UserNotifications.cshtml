@using Devesprit.Utilities.Extensions
@using Devesprit.Services.TemplateEngine
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common
@model X.PagedList.IPagedList<Devesprit.Data.Domain.TblNotifications>
@{
    int counter = Model.FirstItemOnPage;
    var templateEngine = DependencyResolver.Current.GetService<ITemplateEngine>();
    Layout = null;
}
<h4>@T("Notifications"):</h4>
<div class="row">
    <div class="col">
        <div class="table-responsive">
            <table class="table table-hover table-sm fs-14">
                <thead>
                    <tr>
                        <th class="text-center">#</th>
                        <th class="text-center">@T("Date")</th>
                        <th class="text-center">@T("Message")</th>
                        <th class="text-center">@T("Delete")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="row-@item.Id">
                            <th scope="row" class="text-center">
                                @counter
                            </th>
                            <td class="text-center @Html.Raw(item.Readed ? "" : "bg-warning")" title="@item.NotificationDate.ToString("F")">
                                @if (!item.Readed)
                                { 
                                    <span class="text-danger">*</span>
                                }
                                @item.NotificationDate.ToString("d")
                            </td>
                            <td>
                                @Html.Raw(item.IsMessage ? item.MessageResourceName : templateEngine.CompileTemplate(T(item.MessageResourceName).ToString(), item.MessageArguments.JsonToObject()))
                            </td>
                            <td class="text-center">
                                @Ajax.ActionLink(T("Delete").ToString(), "DeleteNotification", "Profile",
                                    new { id = item.Id },
                                    new AjaxOptions()
                                    {
                                        HttpMethod = "POST",
                                        OnFailure = "ErrorAlert('" + T("Error") + "', '" + T("ServerConnectionError") + "');",
                                        OnSuccess = "if(data.response === 'OK'){$('#row-" + item.Id+"').remove();}"
                                    },
                                    new { @class = "btn btn-danger btn-xs" })
                            </td>
                        </tr>
                        {
                            counter++;
                        }
                    }
                </tbody>
            </table>
            @if (!Model.Any())
            {
                <h4 class="text-muted text-center my-5">@T("EmptyRecord")</h4>
            }
        </div>
    </div>
</div>
@if (Model.Any())
{
    <div class="row">
        <div class="col-12">
            @Html.PagedListPager(Model,
                page => Url.Action("UserNotifications", "Profile", new {pageNumber = page, userId = Request.QueryString["userId"] }),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                    new TwitterBootstrap4Pager(),
                    new AjaxOptions() {HttpMethod = "POST", UpdateTargetId = "placeholder"}))
        </div>
    </div>
}