
@using Devesprit.Core
@using Devesprit.Services.Products
@using Devesprit.WebFramework.Helpers
@using OtherExtensions = Devesprit.Utilities.Extensions.OtherExtensions

@model Devesprit.DigiCommerce.Models.Download.DownloadModel
@{
    ViewBag.Title = $"{T("Download")} - {Model.PageTitle}";
    ViewBag.MetaDescription = ViewBag.Title;
    int counter = 0;
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
}

<!-- Head slider -->
<header class="pro-head-slider">
    <div class="pro-head-slider-layer">
        <div class="container">
            <div class="row">
                <div class="col-12 d-flex justify-content-center">
                    <h1 class="pro-head-title pro-head-title-single no-t-mar">
                        @Html.Raw(Model.PageTitle)
                    </h1>
                </div>
                <div class="col-12">
                    <ul class="breadcrumbs">
                        <li><a href="@Url.Action("Index", "Home")">@T("Home")</a></li>
                        <li>/</li>
                        <li><a href="@Model.ProductPageUrl">@Html.Raw(Model.PageTitle)</a></li>
                        <li>/</li>
                        <li>@T("Download") @Html.Raw(Model.IsDemo ? $"<small>({T("DemoVersion")})</small>" : "")</li>
                    </ul>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    @{Html.RenderPartial("Partials/_SearchBox");}
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container t-mar-60 b-mar-60">

    @if (Model.UserHasAccessToFiles != null && !OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserCanDownloadProduct))
    {
        <h4 class="alert alert-warning text-center b-pad-25">
            <i class="fas fa-ban t-mar-20 b-mar-40" style="font-size: 150px;"></i>
            <br/>
            @Html.Raw(T("YouDoNotHaveAccessToThisProduct"))
        </h4>
        <div class="b-mar-40 pad-20 border rounded border-danger">
            @Html.Raw(T("ToDownloadThisProductFollowTheseSteps"))
            <ul style="list-style: initial;padding-left: 40px;margin-bottom: 0;">
                @if (OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserMustLoggedIn))
                {
                    <li>
                        @Html.Raw(T("ToDownloadThisProductUserMustLoggedIn",
                            Url.Action("Login", "User", new { returnUrl = HttpContext.Current.Request.RawUrl, area = "" }),
                            Url.Action("SignUp", "User", new { area = "" })))
                    </li>
                }

                @if (OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserMustSubscribeToAPlan))
                {
                    <li>
                        @Html.Raw(T("ToDownloadThisProductUserMustSubscribeToAPlan",
                            Model.UserGroupName,
                            Url.Action("UpgradeAccount", "Purchase")))
                    </li>
                }

                @if (OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserMustSubscribeToAPlanOrHigher))
                {
                    <li>
                        @Html.Raw(T("ToDownloadThisProductUserMustSubscribeToAPlanOrHigher",
                            Model.UserGroupName,
                            Url.Action("UpgradeAccount", "Purchase")))
                    </li>
                }

                @if (OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserMustPurchaseTheProduct))
                {
                    <li>
                        @Html.Raw(T("ToDownloadThisProductUserMustBuyTheProduct", Model.ProductPageUrl))
                    </li>
                }

                @if (OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserDownloadLimitReached))
                {
                    <li>
                        @Html.Raw(T("YourDownloadLimitationHasBeenReached",
                            Model.DownloadLimit.ToString("N0"),
                            Model.DownloadLimitPer,
                            Model.DownloadLimitResetDate.ToString("f"),
                            Url.Action("Index", "Profile", new { area = "" })))
                    </li>
                }

                @if (OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserGroupDownloadLimitReached))
                {
                    <li>
                        @Html.Raw(T("YourUserGroupDownloadLimitationHasBeenReached",
                            Model.DownloadLimit.ToString("N0"),
                            Model.DownloadLimitPer,
                            Model.DownloadLimitResetDate.ToString("f"),
                            Url.Action("Index", "Profile", new { area = "" })))
                    </li>
                }
            </ul>

            @if ((OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserMustSubscribeToAPlan) ||
                 OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserMustSubscribeToAPlanOrHigher) ||
                 OtherExtensions.HasFlagFast(Model.UserHasAccessToFiles.Value, UserCanDownloadProductResult.UserMustPurchaseTheProduct))
                && !string.IsNullOrWhiteSpace(Model.DiscountsForUserGroups))
            {
                <h6 class="alert alert-warning text-center t-mar-40">
                    @T("SpecialDiscountsForVIPUsers"):
                    <br />
                    <br />
                    <small>@Html.Raw(Model.DiscountsForUserGroups)</small>
                </h6>
            }
        </div>
    }
    @if (@Model.FileGroups.All(p => string.IsNullOrWhiteSpace(p.FileListTree)))
    {
        <h3 class="text-center text-muted mar-v-150">@T("NoFilesToDownload")</h3>
    }
    else
    {
	<h4 class="m-3">@T("UnRarPassword") : <b onclick="CopyToClipboard('lblPassword')" style="cursor: pointer;" class="badge badge-danger" data-toggle="tooltip" title="Click to copy">DownloadDevTools.ir</b></h4>
    <div class="accordion shadow" style="border-radius: 12px; overflow: hidden; border: solid 1px #e0e0e0;" id="accordion">

        @foreach (var group in Model.FileGroups.Where(p => !string.IsNullOrWhiteSpace(p.FileListTree)))
        {
            <div class="bg-dark" id="heading-@counter">
                <h2 class="m-0 p-0">
                    <button class="btn btn-link text-light fs-20" type="button" data-toggle="collapse" data-target="#collapse-@counter" aria-expanded="true" aria-controls="collapse-@counter">
                        @group.Title
                    </button>
                </h2>
            </div>

            <div id="collapse-@counter" class="collapse @Html.Raw(counter == 0 ? "show" : "")" aria-labelledby="heading-@counter" data-parent="#accordion">
                <div class="pad-25" style="overflow-x: auto">
                    <input type="text" id="txtSearchBox-@counter" class="form-control form-control-sm b-mar-15" placeholder="@T("Search")" />
                    <div id="filesListTree-@counter">
                        @Html.Raw(group.FileListTree)
                    </div>
                </div>
            </div>

            Html.AddInlineScript(ResourceLocation.Footer,
@<script>
                         $('#filesListTree-@counter').jstree({
                             "plugins": ["wholerow", "search"],
                             "core": {
                                 "themes": {
                                     "variant": "large"
                                 }
                             }
                         }).bind("select_node.jstree",
                             function(e, data) {
                                 var href = data.node.a_attr.href;
                                 if (href !== "#") {
                                     var win = window.open(href, '_blank');
                                     win.focus();
                                 }
                             });

                         var to = false;
                         $('#txtSearchBox-@counter').keyup(function() {
                             if (to) {
                                 clearTimeout(to);
                             }
                             to = setTimeout(function() {
                                     var v = $('#txtSearchBox-@counter').val();
                                     $('#filesListTree-@counter').jstree(true).search(v);
                                 },
                                 250);
                         });
</script>);

                counter++;
            }

    </div>
	<h4 class="m-3">@T("UnRarPassword") : <b id="lblPassword" onclick="CopyToClipboard('lblPassword')" style="cursor: pointer;" class="badge badge-danger" data-toggle="tooltip" title="Click to copy">DownloadDevTools.ir</b></h4>
    }
   
</div>

@{
    Html.AddInlineScript(ResourceLocation.Footer,
@<script>
function CopyToClipboard(elem) {
    var range = document.createRange();
    range.selectNode(document.getElementById(elem));
    window.getSelection().removeAllRanges();
    window.getSelection().addRange(range);
    document.execCommand("copy");
    window.getSelection().removeAllRanges();
	SuccessAlert('Password copied to clipboard!', '');
}
</script>, true);
}