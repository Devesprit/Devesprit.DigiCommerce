@using Devesprit.Core
@using Devesprit.Core.Settings
@using Devesprit.Services
@using Devesprit.Services.Languages
@using Devesprit.Services.Localization
@using Devesprit.Utilities.Extensions
@using Devesprit.WebFramework.Helpers

@{
    Layout = null;
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
    var settings = DependencyResolver.Current.GetService<ISettingService>().LoadSetting<SiteSettings>();
    var allLanguagesIso = DependencyResolver.Current.GetService<ILanguagesService>().GetAllLanguagesIsoList();
    var defaultLanguage = DependencyResolver.Current.GetService<ILanguagesService>().GetDefaultLanguage();


    //Java scripts
    if (currentLang.IsRtl)
    {
        Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/GeneralScript.rtl.js");
    }
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/GeneralScript.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/iziToast.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/lazyload-12.0.0/dist/lazyload.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Content/SmartWizard-master/dist/js/jquery.smartWizard.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/jstree.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/jssocials.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/EasyAutocomplete-1.3.5/jquery.easy-autocomplete.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/jquery.unobtrusive-ajax.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/jquery.validate.unobtrusive.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/jquery.validate.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/bootstrap.bundle.min.js");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/Scripts/jquery-3.4.1.js");



    //CSS
    if (currentLang.IsRtl)
    {
        Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/Styles.rtl.css");
    }
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/Styles.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/HelperStyles.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/iziToast.min.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/jstree.min.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/jssocials.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/jssocials-theme-minima.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Scripts/EasyAutocomplete-1.3.5/easy-autocomplete.themes.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Scripts/EasyAutocomplete-1.3.5/easy-autocomplete.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/SmartWizard-master/dist/css/smart_wizard.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/font-awesome.css");
    Html.AppendCssFileParts(ResourceLocation.Header, "~/Content/bootstrap.css");
}

<!DOCTYPE html>

<html lang="@currentLang.IsoCode">
<head>
    <title>@Html.Raw(ViewBag.Title ?? settings.GetLocalized(x => x.SiteName))</title>
    @if (!settings.GetLocalized(p => p.FavIcon).IsNullOrWhiteSpace())
    {
        <link rel="icon" type="@(settings.GetLocalized(p => p.FavIcon).EndsWith(".ico", StringComparison.OrdinalIgnoreCase) ? "image/x-icon" : "image/png")" href="@settings.GetLocalized(p => p.FavIcon)" />
    }

    @if (settings.AppendLanguageCodeToUrl)
    {
        <link rel="alternate" hreflang="x-default" href="@Request.Url.SetLangIso(defaultLanguage.IsoCode, allLanguagesIso).ToString()" />
    }
    else
    {
        <link rel="alternate" hreflang="x-default" href="@Request.Url.RemoveLangIso(allLanguagesIso).ToString()" />
    }
    @foreach (var lang in allLanguagesIso)
    {
        <link rel="alternate" hreflang="@lang" href="@Request.Url.SetLangIso(lang, allLanguagesIso).ToString()" />
    }

    <meta charset="utf-8">
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="generator" content="Devesprit DigiCommerce" />
    <meta name="theme-color" content="#494949" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="@Html.Raw(ViewBag.MetaDescription ?? (ViewBag.Title ?? settings.GetLocalized(x => x.SiteName)))">
    <meta name="keywords" content="@Html.Raw(ViewBag.MetaKeyword ?? settings.GetLocalized(x => x.MetaKeyWords))">
    @Html.GenerateHeadCustom()

    @Html.GenerateCssFiles(Url, ResourceLocation.HeaderBeforeOther)
    @Html.GenerateCssFiles(Url, ResourceLocation.Header)
    @Html.GenerateCssFiles(Url, ResourceLocation.HeaderAfterOther)

    @Html.GenerateScripts(Url, ResourceLocation.HeaderBeforeOther)
    @Html.GenerateScripts(Url, ResourceLocation.Header)
    @Html.GenerateScripts(Url, ResourceLocation.HeaderAfterOther)

    @Html.GenerateCanonicalUrls()

    @Html.Widget("head_tag")
</head>
<body>
    @Html.Widget("body_tag_start")

    @RenderBody()
    <a href="#" id="back-to-top" title="@T("BackToTop")"><i class="fa fa-arrow-up" aria-hidden="true"></i></a>
    <div id="dlgProductPurchaseWizard"></div>
    @Html.Partial("Partials/_LoadingPanel")

    @Html.Partial("Partials/_Notifications")

    @Html.GenerateCssFiles(Url, ResourceLocation.FooterBeforeOther)
    @Html.GenerateCssFiles(Url, ResourceLocation.Footer)
    @Html.GenerateCssFiles(Url, ResourceLocation.FooterAfterOther)

    @Html.GenerateScripts(Url, ResourceLocation.FooterBeforeOther)
    @Html.GenerateScripts(Url, ResourceLocation.Footer)
    @Html.GenerateScripts(Url, ResourceLocation.FooterAfterOther)

    @Html.Widget("body_tag_end")
</body>
</html>
