@using System.Web.Mvc.Html
@using Devesprit.Core
@using Devesprit.DigiCommerce.Models
@using Devesprit.DigiCommerce.Models.Post
@using Devesprit.DigiCommerce.Models.Products
@using Devesprit.Services.Localization
@using Devesprit.Services.Posts
@using Devesprit.Utilities
@model Devesprit.DigiCommerce.Models.Products.ProductsExplorerModel

@{
    if (Model.PageIndex > 1)
    {
        Html.AddHeadCustomParts("<meta name=\"robots\" content=\"noindex\">");
    }
	var categoriesService = DependencyResolver.Current.GetService<IPostCategoriesService>();
    var catLists = categoriesService.GetParentCategoriesList(Model.FilterByCategoryId.Value);

    var categoryFullName = string.Join(" / ", catLists.Select(p => p.GetLocalized(x => x.CategoryName)));
    
    ViewBag.Title = T("NewestProductsIn", categoryFullName, Model.PageIndex);
    ViewBag.MetaDescription = ViewBag.Title;
    var workContext = DependencyResolver.Current.GetService<IWorkContext>();
    var pageMainUrl = Url.Action("FilterByCategory", "Product", new { page = Model.PageIndex, slug = Model.CategorySlug, lang = workContext.CurrentLanguage.IsoCode }, Request.Url.Scheme);
    Html.AddCanonicalUrlParts(pageMainUrl);
}

<!-- pro head slider -->
<header class="pro-head-slider">
    <div class="pro-head-slider-layer">
        <div class="container">
            <div class="row">
                <div class="col-12 d-flex justify-content-center">
                    <h1 class="pro-head-title pro-head-title-archive">
                        <a href="@Url.Action("Products", "RssFeed", new {listType = Model.PostsListType, page = 1, catId = Model.FilterByCategoryId, fromDate = Model.FromDate}).RemoveEmptyParametersFromQueryString()" target="_blank" title="@T("RSSFeed")" class="text-warning"><i class="fa fa-rss"></i></a>
                        @Html.Raw(@T("NewestProductsInCategory", categoryFullName))
                    </h1>
                </div>
                <div class="col-12">
                    <ul class="breadcrumbs">
                        <li><a href="@Url.Action("Index", "Home")">@T("Home")</a></li>
                        @foreach (var cat in catLists)
                        {
                            <li>/</li>
                            <li>
                                <a href="@Url.Action("FilterByCategory", "Product", new {slug = cat.Slug, page = 1, lang = workContext.CurrentLanguage.IsoCode}, Request.Url.Scheme)">
                                    @Html.Raw(cat.GetLocalized(p => p.CategoryName).Trim())
                                </a>
                            </li>
                        }
						<li>/</li>
						<li>@T("Page", Model.PageIndex)</li>
                    </ul>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    @{Html.RenderPartial("Partials/_SearchBox");}
                </div>
            </div>
        </div>
    </div>
</header>

<!-- category body -->
<div class="container">
    <div class="row mar-v-80">
        <div class="col-sm-12 col-md-4 col-lg-3">
            <h3 class="fs-18">
                <a href="@Url.Action("Products", "RssFeed", new {listType = ProductsListType.MostPopular, page = 1, catId = Model.FilterByCategoryId, fromDate = Model.FromDate}).RemoveEmptyParametersFromQueryString()" target="_blank" title="@T("RSSFeed")" class="text-warning"><i class="fa fa-rss"></i></a>
                <span>@Html.Raw(T("MostPopularProductsIn", Model.CategoryName))</span>
            </h3>

            @{Html.RenderAction("GetProductsList", "Product", new
                {
                    listType = ProductsListType.MostPopular,
                    page = Model.PageIndex,
                    pageSize = 15,
                    catId = Model.FilterByCategoryId,
                    fromDate = Model.FromDate,
                    wrapperStart = "<div class='col-12'>",
                    style = ViewStyles.Small,
                    showPager = false
                });}
        </div>
        <div class="col-sm-12 col-md-8 col-lg-9">
            <div class="row">
                @{Html.RenderAction("GetProductsList", "Product", new
                    {
                        listType = Model.PostsListType,
                        page = Model.PageIndex,
                        pageSize = Model.PageSize,
                        catId = Model.FilterByCategoryId,
                        fromDate = Model.FromDate,
                        wrapperStart = "<div class='col-12 col-sm-6 col-lg-4 d-sm-flex justify-content-sm-center'>",
                        showPager = true,
                    });}
            </div>
        </div>

    </div>
</div>