@using Devesprit.Data.Enums
@using Devesprit.Services.Currency
@using Devesprit.Services.Invoice
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common
@model X.PagedList.IPagedList<Devesprit.Data.Domain.TblInvoices>
@{
    int counter = Model.FirstItemOnPage;
    Layout = null;
}
<h4>@T("Invoices"):</h4>
<div class="row">
    <div class="col">
        <div class="table-responsive">
            <table class="table table-hover table-sm fs-14">
                <thead>
                    <tr>
                        <th class="text-center">#</th>
                        <th class="text-center"></th>
                        <th class="text-center">@T("Date")</th>
                        <th class="text-center">@T("NumberOfItems")</th>
                        <th class="text-center">@T("Total")</th>
                        <th class="text-center">@T("Status")</th>
                        <th class="text-center">@T("PaymentDate")</th>
                        <th class="text-center">@T("PaymentGateway")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var invoice in Model)
                    {
                        <tr>
                            <th scope="row" class="text-center">
                                @counter
                            </th>
                            <td class="text-center">
                                <a class="btn btn-success btn-xs" target="_blank" href="@Url.Action("Index", "Invoice", new {id = invoice.Id})">
                                    @T("SeeMore")
                                </a>
                            </td>
                            <td class="text-center" title="@invoice.CreateDate.ToString("F")">
                                @invoice.CreateDate.ToString("d")
                            </td>
                            <td class="text-center">
                                @invoice.InvoiceDetails.Count
                            </td>
                            <td class="text-center">
                                @invoice.ComputeInvoiceTotalAmount(false).ExchangeCurrencyStr(true)
                            </td>
                            <td class="text-center">
                                @switch (invoice.Status)
                                {
                                    case InvoiceStatus.Pending:
                                        <span class="badge badge-warning">
                                            @T("WaitingForPayment")
                                        </span>
                                        break;
                                    case InvoiceStatus.Paid:
                                        <span class="badge badge-success">
                                            @T("Paid")
                                        </span>
                                        break;
                                    default:
                                        throw new ArgumentOutOfRangeException();
                                }
                            </td>
                            <td class="text-center" title="@(invoice.PaymentDate?.ToString("F"))">
                                @(invoice.PaymentDate?.ToString("d") ?? " - ")
                            </td>
                            <td class="text-center">
                                @invoice.PaymentGatewayName
                            </td>
                        </tr>
                        {
                            counter++;
                        }
                    }
                </tbody>
            </table>
            @if (!Model.Any())
            {
                <h4 class="text-muted text-center my-5">@T("EmptyRecord")</h4>
            }
        </div>
    </div>
</div>
@if (Model.Any())
{
    <div class="row">
        <div class="col-12">
            @Html.PagedListPager(Model,
                page => Url.Action("UserInvoices", "Profile", new { pageNumber = page, userId = Request.QueryString["userId"] }),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                    new TwitterBootstrap4Pager(),
                    new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "placeholder" }))
        </div>
    </div>
}