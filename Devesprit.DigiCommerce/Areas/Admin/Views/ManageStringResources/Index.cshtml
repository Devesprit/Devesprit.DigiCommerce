
@using Devesprit.Core
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ
@{
    ViewBag.Title = T("ManageStringResources");
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
}

<div class="panel no-hide-overflow">
    <div class="panel-title pad-10">
        <h5 class="no-mar">
            @T("ManageStringResources") (@ViewBag.LangName)
        </h5>
    </div>

    <div class="pad-10">
        <div class="pad-v-10 b-mar-50">
            <a class="btn btn-sm btn-success float-end mar-h-5" href="@Url.Action("ExportResources", new {langId = ViewBag.LangId})">
                @T("ExportStringResources")
            </a>
            @using (Html.BeginForm("ImportResources", "ManageStringResources", new { langId = ViewBag.LangId }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "inline", id = "frmImportResources" }))
            {
                @Html.AntiForgeryToken()
                <input type="file" id="xmlFile" name="xmlFile" class="d-none" onchange="$('#frmImportResources').submit();" />
                <button class="btn btn-sm btn-warning float-end mar-h-5" type="button" onclick="$('#xmlFile').click();">
                    @T("ImportStringResources")
                </button>
            }
            <br />
        </div>

        @(Html.EJ().Grid<object>("StringResourcesGrid")
              .Datasource(ds =>
              {
                  ds.URL(Url.Action("GridDataSource", new { filterByLangId = ViewBag.LangId }))
                      .Adaptor(AdaptorType.UrlAdaptor)
                      .UpdateURL(Url.Action("Update"))
                      .InsertURL(Url.Action("Insert"));
              })
              .AllowSorting()
              .AllowResizing()
              .AllowReordering()
              .AllowPaging()
              .AllowFiltering()
              .AllowTextWrap()
              .AllowSelection()
              .ShowColumnChooser()
              .IsResponsive()
              .SelectionType(SelectionType.Multiple)
              .EnablePersistence(false)
              .EnableResponsiveRow(true)
              .EnableRTL(currentLang.IsRtl)
              .MinWidth(990)
              .Locale("localString")
              .ClientSideEvents(evt => evt.ActionBegin("begin").EndEdit("endEdit").ActionComplete("complete"))

              .EditSettings(edt => edt.AllowEditing().AllowDeleting().AllowAdding().EditMode(EditMode.InlineForm).ShowDeleteConfirmDialog())
              .PageSettings(p => { p.PageSize(25).PageSizeList(new List<int>(){10, 25, 50, 100, 250, 500}).PageCount(5).PrintMode(PrintMode.CurrentPage); })
              .FilterSettings(f => { f.FilterType(FilterType.Menu); })
              .TextWrapSettings(s => s.WrapMode(WrapMode.Both))
              .ScrollSettings(s=> s.EnableTouchScroll(true))
              .ToolbarSettings(toolBar => toolBar.ShowToolbar()
                  .CustomToolbarItems(new List<object>(){ new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#StringResourcesGridRefresh" } })
                  .ToolbarItems(items =>
                  {
                      items.AddTool(ToolBarItems.Add);
                      items.AddTool(ToolBarItems.Edit);
                      items.AddTool(ToolBarItems.Delete);
                      items.AddTool(ToolBarItems.Update);
                      items.AddTool(ToolBarItems.Cancel);
                      items.AddTool(ToolBarItems.PrintGrid);
                  }))
              .Columns(col =>
              {
                  col.Field("Id").HeaderText(T("Id").ToString()).Width(60).AllowEditing(false).IsPrimaryKey(true).Visible(false).Add();
                  col.Field("ResourceName").HeaderText(T("Name").ToString()).ValidationRules(v => v.AddRule("required", true)).Width(250).Add();
                  col.Field("ResourceValue").HeaderText(T("Value").ToString()).ValidationRules(v => v.AddRule("required", true)).DisableHtmlEncode(true).Add();
                  col.Field("LanguageId").HeaderText(T("Language").ToString()).Width(150).ValidationRules(v => v.AddRule("required", true)).EditType(EditingType.DropdownEdit).DataSource((IEnumerable<object>)ViewBag.LanguagesDropDown).ForeignKeyField("value").ForeignKeyValue("text").Add();
              }))
    </div>
</div>
<script id="StringResourcesGridRefresh" type="text/x-jsrender">
    <a onclick="refreshStringResourcesGrid();" class="e-toolbaricons e-icon"><i class="fa fa-refresh"></i></a>
</script>
@{
    Html.AddInlineScript(ResourceLocation.Footer,
        @<script>
             function complete(args) {
                 if (args.requestType === "cancel")
                     this.element.ejWaitingPopup("hide");
             }

             function begin(args) {
                 if (args.requestType === "delete") {
                     //Delete record
                     args.cancel = true;
                     DeleteEntity(args.data.map(function(item){return item.Id;}), "@Url.Action("Delete")", refreshStringResourcesGrid);
                 }
                 else
                 if (args.requestType === "save")
                     this.element.ejWaitingPopup("show");
             }

             function endEdit(args) {
                 this.element.ejWaitingPopup("hide");
             }

             function refreshStringResourcesGrid() {
                 $("#StringResourcesGrid").ejGrid("refreshContent");
             }
         </script>);
}