
@using Devesprit.Core
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ
@{
    ViewBag.Title = T("ManagePostCategories");
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
}

<div class="panel no-hide-overflow">
    <div class="panel-title pad-10">
        <h5 class="no-mar">
            @T("ManagePostCategories")
        </h5>
    </div>

    <div class="pad-10">
        @(Html.EJ().Grid<object>("PostCategoriesGrid")
                .Datasource(ds =>
                {
                    ds.URL(Url.Action("GridDataSource")).Adaptor(AdaptorType.UrlAdaptor);
                })
                .AllowSorting()
                .AllowResizing()
                .AllowReordering()
                .AllowPaging()
                .AllowFiltering()
                .AllowTextWrap()
                .AllowSelection()
                .ShowColumnChooser()
                .IsResponsive()
                .SelectionType(SelectionType.Multiple)
                .EnablePersistence(false)
                .EnableResponsiveRow(true)
                .EnableRTL(currentLang.IsRtl)
                .MinWidth(990)
                .Locale("localString")
                .ClientSideEvents(evt => evt.ActionBegin("onPostCategoriesGridAction"))

                .EditSettings(edt => edt.AllowEditing().AllowDeleting().AllowAdding().ShowDeleteConfirmDialog())
                .PageSettings(p => { p.PageSize(25).PageSizeList(new List<int>(){10, 25, 50, 100, 250, 500}).PageCount(5).PrintMode(PrintMode.CurrentPage); })
                .FilterSettings(f => { f.FilterType(FilterType.Menu); })
                .TextWrapSettings(s => s.WrapMode(WrapMode.Both))
                .ScrollSettings(s=> s.EnableTouchScroll(true))
                .ToolbarSettings(toolBar => toolBar.ShowToolbar()
                .CustomToolbarItems(new List<object>(){ new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#PostCategoriesGridRefresh" } })
                .ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.Add);
                    items.AddTool(ToolBarItems.Edit);
                    items.AddTool(ToolBarItems.Delete);
                    items.AddTool(ToolBarItems.PrintGrid);
                }))
                .Columns(col =>
                {
                    col.Field("Id").HeaderText(T("Id").ToString()).Width(60).IsPrimaryKey(true).Visible(false).Add();
                    col.Field("CategoryName").HeaderText(T("CategoryName").ToString()).Add();
                    col.Field("ParentCategoryName").HeaderText(T("ParentCategory").ToString()).Add();
                    col.Field("DisplayOrder").HeaderText(T("DisplayOrder").ToString()).Width(120).Add();
                    col.Field("Slug").HeaderText(T("Slug").ToString()).Add();
                    col.HeaderText(T("Action").ToString()).TextAlign(TextAlign.Center).Width(230).Template("#ActionTemplate").Add();
                }))
    </div>
</div>

<script id="ActionTemplate" type="text/template">
    <button type="button" class="btn btn-xs btn-block btn-success text-light m-1" onclick="openCategory('{{:Slug}}', false)">@T("ShowProductsCategory")</button>
    <button type="button" class="btn btn-xs btn-block btn-info text-light m-1" onclick="openCategory('{{:Slug}}', true)">@T("ShowBlogCategory")</button>
</script>
<script id="PostCategoriesGridRefresh" type="text/x-jsrender">
    <a onclick="refreshPostCategoriesGrid();" class="e-toolbaricons e-icon"><i class="fa fa-refresh"></i></a>
</script>
@{
    Html.AddInlineScript(ResourceLocation.Footer,
        @<script>
             function onPostCategoriesGridAction(args) {
                 if (args.requestType === "delete") {
                     //Delete record
                     args.cancel = true;
                     DeleteEntity(args.data.map(function(item){return item.Id;}), "@Url.Action("Delete")", refreshPostCategoriesGrid);
                 } else if (args.requestType === "beginedit") {
                     //Edit record
                     args.cancel = true;
                     PopupWindows('@Url.Action("Editor")',
                         'PostCategoryEditor',
                         1200,
                         600,
                         { id: args.rowData.Id },
                         'get');
                 } else if (args.requestType === "add") {
                     //Add new record
                     args.cancel = true;
                     PopupWindows('@Url.Action("Editor")', 'PostCategoryEditor', 600, 450, {}, 'get');
                 }
             }

             function refreshPostCategoriesGrid() {
                 $("#PostCategoriesGrid").ejGrid("refreshContent");
             }

             function openCategory(pageUrl, blog) {
                 if (blog) {
                     window.open('/BlogCategories/' + pageUrl, '_blank');
                 } else {
                     window.open('/Categories/' + pageUrl, '_blank');
                 }


             }
         </script>);
}