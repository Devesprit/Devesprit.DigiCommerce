
@using Devesprit.Core
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ
@{
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
}

@(Html.EJ().Grid<object>("RedirectsGrid")
                .Datasource(ds =>
                {
                    ds.URL(ViewBag.DataSource).Adaptor(AdaptorType.UrlAdaptor);
                })
                .AllowSorting()
                .AllowResizing()
                .AllowReordering()
                .AllowPaging()
                .AllowFiltering()
                .AllowTextWrap()
                .AllowSelection()
                .ShowColumnChooser()
                .IsResponsive()
                .SelectionType(SelectionType.Multiple)
                .EnablePersistence(false)
                .EnableResponsiveRow(true)
                .EnableRTL(currentLang.IsRtl)
                .MinWidth(990)
                .Locale("localString")
                .ClientSideEvents(evt => evt.ActionBegin("onRedirectsGridAction"))

                .EditSettings(edt => edt.AllowEditing().AllowDeleting().AllowAdding().ShowDeleteConfirmDialog())
                .PageSettings(p => { p.PageSize(25).PageSizeList(new List<int>(){10, 25, 50, 100, 250, 500}).PageCount(5).PrintMode(PrintMode.CurrentPage); })
                .FilterSettings(f => { f.FilterType(FilterType.Menu); })
                .TextWrapSettings(s => s.WrapMode(WrapMode.Both))
                .ScrollSettings(s=> s.EnableTouchScroll(true))
                .ToolbarSettings(toolBar => toolBar.ShowToolbar()
                    .CustomToolbarItems(new List<object>(){ new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#RedirectsGridRefresh" } })
                    .ToolbarItems(items =>
                {
                    items.AddTool(ToolBarItems.Add);
                    items.AddTool(ToolBarItems.Edit);
                    items.AddTool(ToolBarItems.Delete);
                    items.AddTool(ToolBarItems.PrintGrid);
                }))
                .Columns(col =>
                {
                    col.Field("Id").HeaderText(T("Id").ToString()).Width(50).IsPrimaryKey(true).Visible(false).Add();
                    col.Field("Name").HeaderText(T("RuleName").ToString()).Width(100).Add();
                    col.Field("RequestedUrl").HeaderText(T("RequestedUrl").ToString()).Width(150).Add();
                    col.Field("ResponseUrl").HeaderText(T("ResponseUrl").ToString()).Width(150).Add();
                    col.Field("MatchType").HeaderText(T("MatchType").ToString()).Visible(false).Add();
                    col.Field("IgnoreCase").HeaderText(T("IgnoreCase").ToString()).Visible(false).Add();
                    col.Field("ResponseType").HeaderText(T("ResponseType").ToString()).Visible(false).Add();
                    col.Field("RedirectStatus").HeaderText(T("RedirectStatus").ToString()).Visible(false).Add();
                    col.Field("AppendQueryString").HeaderText(T("AppendQueryString").ToString()).Visible(false).Add();
                    col.Field("StopProcessingOfSubsequentRules").HeaderText(T("StopProcessingOfSubsequentRules").ToString()).Visible(false).Add();
                    col.Field("Order").HeaderText(T("Order").ToString()).Width(80).Add();
                    col.Field("Active").HeaderText(T("Active").ToString()).Width(80).Add();
                }))
<script id="RedirectsGridRefresh" type="text/x-jsrender">
    <a onclick="refreshRedirectsGrid();" class="e-toolbaricons e-icon"><i class="fa fa-refresh"></i></a>
</script>

@Html.MinifyInlineScript(
    @<script>
    function onRedirectsGridAction(args) {
        if (args.requestType === "delete") {
            //Delete record
            args.cancel = true;
            DeleteEntity(args.data.map(function(item){return item.Id;}), "@Url.Action("Delete")", refreshRedirectsGrid);
        } else if (args.requestType === "beginedit") {
            //Edit record
            args.cancel = true;
            @if (ViewBag.RedirectGroup != null && ViewBag.EntityId != null)
            {
                @Html.Raw($"PopupWindows('{Url.Action("EntitySlugEditor")}', 'EntitySlugEditor', 770, 440, {{ ruleId: args.rowData.Id, redirectGroup: '{ViewBag.RedirectGroup}', entityId: {ViewBag.EntityId} }}, 'get');");
            }
            else {
                @Html.Raw($"PopupWindows('{Url.Action("Editor")}', 'RedirectRuleEditor', 770, 640, {{ id: args.rowData.Id }}, 'get');")
            }
        } else if (args.requestType === "add") {
            //Add new record
            args.cancel = true;
            @if (ViewBag.RedirectGroup != null && ViewBag.EntityId != null)
            {
                @Html.Raw($"PopupWindows('{Url.Action("EntitySlugEditor")}', 'EntitySlugEditor', 770, 440, {{ redirectGroup: '{ViewBag.RedirectGroup}', entityId: {ViewBag.EntityId} }}, 'get');");
            }
            else {
                @Html.Raw($"PopupWindows('{Url.Action("Editor")}', 'RedirectRuleEditor', 770, 640, {{ }}, 'get');")
            }
        }
    }

    function refreshRedirectsGrid() {
        $("#RedirectsGrid").ejGrid("refreshContent");
    }
    </script>)
