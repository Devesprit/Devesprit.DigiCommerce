
@using Devesprit.Core
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ
@{
    Layout = null;
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
}

@(Html.EJ().Grid<object>("InvoicesGrid")
        .Datasource(ds =>
        {
            ds.URL(ViewBag.DataSource).Adaptor(AdaptorType.UrlAdaptor);
        })
        .AllowSorting()
        .AllowResizing()
        .AllowReordering()
        .AllowPaging()
        .AllowFiltering()
        .AllowTextWrap()
        .AllowSelection()
        .ShowColumnChooser()
        .IsResponsive()
        .SelectionType(SelectionType.Multiple)
        .EnablePersistence(false)
        .EnableResponsiveRow(true)
        .EnableRTL(currentLang.IsRtl)
        .MinWidth(990)
        .Locale("localString")
        .ClientSideEvents(evt => evt.ActionBegin("onInvoicesGridAction"))

        .EditSettings(edt => edt.AllowEditing().AllowDeleting().AllowAdding().ShowDeleteConfirmDialog())
        .PageSettings(p => { p.PageSize(25).PageSizeList(new List<int>() { 10, 25, 50, 100, 250, 500 }).PageCount(5).PrintMode(PrintMode.CurrentPage); })
        .FilterSettings(f => { f.FilterType(FilterType.Menu); })
        .TextWrapSettings(s => s.WrapMode(WrapMode.Both))
        .ScrollSettings(s => s.EnableTouchScroll(true))
        .ToolbarSettings(toolBar => toolBar.ShowToolbar()
            .CustomToolbarItems(new List<object>() { new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#InvoicesGridRefresh" } })
            .ToolbarItems(items =>
        {
            items.AddTool(ToolBarItems.Add);
            items.AddTool(ToolBarItems.Edit);
            items.AddTool(ToolBarItems.Delete);
            items.AddTool(ToolBarItems.PrintGrid);
        }))
        .Columns(col =>
        {
            col.Field("Id").HeaderText(T("Id").ToString()).Width(60).IsPrimaryKey(true).Visible(false).Add();
            col.Field("UserName").HeaderText(T("User").ToString()).Add();
            col.Field("Total").HeaderText(T("Total").ToString()).AllowFiltering(false).AllowSorting(false).Format("{0:N2}").Add();
            col.Field("Currency").HeaderText(T("Currency").ToString()).Add();
            col.Field("CreateDate").HeaderText(T("CreationDate").ToString()).Format("{0:yyyy/MM/dd HH:mm:ss}").Visible(false).Add();
            col.Field("PaymentDate").HeaderText(T("PaymentDate").ToString()).Format("{0:yyyy/MM/dd HH:mm:ss}").Add();
            col.Field("Status").HeaderText(T("Status").ToString()).Add();
            col.Field("ItemsCount").HeaderText(T("NumberOfItems").ToString()).Add();
            col.Field("BillingAddress").HeaderText(T("BillingAddress").ToString()).Visible(false).Add();
            col.Field("PaymentGatewayName").HeaderText(T("PaymentGateway").ToString()).Add();
            col.Field("PaymentGatewayTransactionId").HeaderText(T("TransactionId").ToString()).Visible(false).Add();
            col.Field("DiscountAmount").HeaderText(T("DiscountAmount").ToString()).Format("{0:N2}").Visible(false).Add();
        }))

<script id="InvoicesGridRefresh" type="text/x-jsrender">
    <a onclick="refreshInvoicesGrid();" class="e-toolbaricons e-icon"><i class="fa fa-refresh"></i></a>
</script>

@Html.MinifyInlineScript(
    @<script>
         function onInvoicesGridAction(args) {
             if (args.requestType === "delete") {
                 //Delete record
                 args.cancel = true;
                 DeleteEntity(args.data.map(function(item){return item.Id;}), "@Url.Action("Delete")", refreshInvoicesGrid);
             } else if (args.requestType === "beginedit") {
                 //Edit record
                 args.cancel = true;
                 var url = '@Url.Action("Index", "Invoice", new {area = ""})?id=' + args.rowData.Id;
                 var win = window.open(url, '_blank');
                 if (win) {
                     win.focus();
                 } else {
                     WarningAlert('@T("Note")', '@Html.Raw(T("AllowPopupsOrClickHere"))'.replace("{0}", url));
                 }
             } else if (args.requestType === "add") {
                 //Add new record
                 args.cancel = true;

                 $('#LoadingPanel').show();
                 $.ajax({
                     type: "POST",
                     url: "@Url.Action("CreateNew")",
                     error: function(xhr, status, error) {
                         ErrorAlert('@T("Error")', '@T("ServerConnectionError")');
                     },
                     success: function(response) {
                         var url = '@Url.Action("Index", "Invoice", new {area = ""})?id=' + response;
                         var win = window.open(url, '_blank');
                         if (win) {
                             win.focus();
                         } else {
                             WarningAlert('@T("Note")', '@Html.Raw(T("AllowPopupsOrClickHere"))'.replace("{0}", url));
                        }

                        refreshInvoicesGrid();
                    },
                    complete: function() {
                        $('#LoadingPanel').hide();
                    }
                });
            }
        }

        function refreshInvoicesGrid() {
            $("#InvoicesGrid").ejGrid("refreshContent");
                    }
    </script>)


