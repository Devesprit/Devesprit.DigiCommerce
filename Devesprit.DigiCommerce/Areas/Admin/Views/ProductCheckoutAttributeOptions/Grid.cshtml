
@using Devesprit.Core
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ

@{
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
}

@(Html.EJ().Grid<object>("ProductCheckoutAttributeOptionsGrid")
          .Datasource(ds =>
          {
              ds.URL(ViewBag.DataSource).Adaptor(AdaptorType.UrlAdaptor);
          })
          .AllowSorting()
          .AllowResizing()
          .AllowReordering()
          .AllowPaging()
          .AllowFiltering()
          .AllowTextWrap()
          .AllowSelection()
          .ShowColumnChooser()
          .IsResponsive()
          .SelectionType(SelectionType.Multiple)
          .EnablePersistence(false)
          .EnableResponsiveRow(true)
          .EnableRTL(currentLang.IsRtl)
          .MinWidth(990)
          .Locale("localString")
          .ClientSideEvents(evt => evt.ActionBegin("onProductCheckoutAttributeOptionsGridAction"))

          .EditSettings(edt => edt.AllowEditing().AllowDeleting().AllowAdding().ShowDeleteConfirmDialog())
          .PageSettings(p => { p.PageSize(25).PageSizeList(new List<int>(){10, 25, 50, 100, 250, 500}).PageCount(5).PrintMode(PrintMode.CurrentPage); })
          .FilterSettings(f => { f.FilterType(FilterType.Menu); })
          .TextWrapSettings(s => s.WrapMode(WrapMode.Both))
          .ScrollSettings(s=> s.EnableTouchScroll(true))
          .ToolbarSettings(toolBar => toolBar.ShowToolbar()
              .CustomToolbarItems(new List<object>(){ new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#ProductCheckoutAttributeOptionsGridRefresh" } })
              .ToolbarItems(items =>
          {
              items.AddTool(ToolBarItems.Add);
              items.AddTool(ToolBarItems.Edit);
              items.AddTool(ToolBarItems.Delete);
              items.AddTool(ToolBarItems.PrintGrid);
          }))
          .Columns(col =>
          {
              col.Field("Id").Width(50).HeaderText(T("Id").ToString()).IsPrimaryKey(true).Visible(false).Add();
              col.Field("Name").HeaderText(T("OptionName").ToString()).Width(160).Add();
              col.Field("Price").HeaderText(T("Price").ToString()).Format("{0:n2}").Add();
              col.Field("RenewalPrice").HeaderText(T("RenewalPrice").ToString()).Format("{0:n2}").Visible(false).Add();
              col.Field("PurchaseExpiration").HeaderText(T("PurchaseExpiration").ToString()).Add();
              col.Field("FilesPath").HeaderText(T("FilesPath").ToString()).Visible(false).Add();
              col.Field("FileServer").HeaderText(T("FileServer").ToString()).Visible(false).Add();
              col.Field("DownloadLimitedToUserGroup").HeaderText(T("DownloadLimit").ToString()).Visible(false).Add();
              col.Field("DisplayOrder").HeaderText(T("DisplayOrder").ToString()).Width(80).Add();
          }))
<script id="ProductCheckoutAttributeOptionsGridRefresh" type="text/x-jsrender">
    <a onclick="refreshProductCheckoutAttributeOptionsGrid();" class="e-toolbaricons e-icon"><i class="fa fa-refresh"></i></a>
</script>
@Html.MinifyInlineScript(
    @<script>
    function onProductCheckoutAttributeOptionsGridAction(args) {
        if (args.requestType === "delete") {
            //Delete record
            args.cancel = true;
            DeleteEntity(args.data.map(function(item){return item.Id;}), "@Url.Action("Delete")", refreshProductCheckoutAttributeOptionsGrid);
        } else if (args.requestType === "beginedit") {
            //Edit record
            args.cancel = true;
            PopupWindows('@Url.Action("Editor")', 'ProductCheckoutAttributeOptionEditor', 900, 700, { id: args.rowData.Id, attributeId: @ViewBag.AttributeId }, 'get');
        } else if (args.requestType === "add") {
            //Add new record
            args.cancel = true;
            PopupWindows('@Url.Action("Editor")', 'ProductCheckoutAttributeOptionEditor', 900, 700, { attributeId: @ViewBag.AttributeId}, 'get');
        }
    }

    function refreshProductCheckoutAttributeOptionsGrid() {
        $("#ProductCheckoutAttributeOptionsGrid").ejGrid("refreshContent");
    }
    </script>)
