
@using Devesprit.Core
@using Syncfusion.JavaScript
@using Syncfusion.MVC.EJ
@{
    ViewBag.Title = T("BackgroundJobsManager");
    var currentLang = DependencyResolver.Current.GetService<IWorkContext>().CurrentLanguage;
}

<div class="panel no-hide-overflow">
    <div class="panel-title pad-10">
        <h5 class="no-mar">
            @T("BackgroundJobsManager")
        </h5>
    </div>

    <div class="pad-10">
        @(Html.EJ().Grid<object>("BgJobsGrid")
            .Datasource(ds =>
            {
                ds.URL(Url.Action("GridDataSource")).Adaptor(AdaptorType.UrlAdaptor);
            })
            .AllowSorting()
            .AllowResizing()
            .AllowReordering()
            .AllowPaging()
            .AllowFiltering()
            .AllowTextWrap()
            .AllowSelection()
            .ShowColumnChooser()
            .IsResponsive()
            .SelectionType(SelectionType.Multiple)
            .EnablePersistence(false)
            .EnableResponsiveRow(true)
            .EnableRTL(currentLang.IsRtl)
            .MinWidth(990)
            .Locale("localString")
            .ClientSideEvents(evt => evt.ActionBegin("onBgJobsGridAction"))

            .EditSettings(edt => edt.AllowEditing().AllowDeleting().ShowDeleteConfirmDialog())
            .PageSettings(p => { p.PageSize(25).PageSizeList(new List<int>() { 10, 25, 50, 100, 250, 500 }).PageCount(5).PrintMode(PrintMode.CurrentPage); })
            .FilterSettings(f => { f.FilterType(FilterType.Menu); })
            .TextWrapSettings(s => s.WrapMode(WrapMode.Both))
            .ScrollSettings(s => s.EnableTouchScroll(true))
                        .ToolbarSettings(toolBar => toolBar.ShowToolbar()
                            .CustomToolbarItems(new List<object>() { new Syncfusion.JavaScript.Models.CustomToolbarItem() { TemplateID = "#BgJobsGridRefresh" } })
                            .ToolbarItems(items =>
                        {
                            items.AddTool(ToolBarItems.Edit);
                            items.AddTool(ToolBarItems.Delete);
                            items.AddTool(ToolBarItems.PrintGrid);
                        }))
                        .Columns(col =>
                        {
                            col.Field("Id").HeaderText(T("Id").ToString()).Width(100).IsPrimaryKey(true).Visible(false).Add();
                            col.HeaderText(T("Job").ToString()).Field("Job").Add();
                            col.HeaderText(T("Cron").ToString()).Field("Cron").Add();
                            col.HeaderText(T("LastExecution").ToString()).Field("LastExecution").Add();
                            col.HeaderText(T("LastJobState").ToString()).Field("LastJobState").Add();
                            col.HeaderText(T("NextExecution").ToString()).Field("NextExecution").Add();
                            col.HeaderText(T("TimeZone").ToString()).Field("TimeZoneId").Add();
                            col.HeaderText(T("JobIsPaused").ToString()).Field("Paused").Add();
                            col.HeaderText(T("Action").ToString()).TextAlign(TextAlign.Center).Template("#ActionTemplate").Add();
                        }))


        @if (User.HasPermission("ManageBackgroundJobs_BackgroundJobServer"))
        {
            <div class="text-center">
                <a href="/hangfire" target="_blank" class="btn btn-primary mt-3 mb-2">@T("BackgroundJobServer")</a>
            </div>
        }
    </div>
</div>

<script id="BgJobsGridRefresh" type="text/x-jsrender">
    <a onclick="refreshBgJobsGrid();" class="e-toolbaricons e-icon"><i class="fa fa-refresh"></i></a>
</script>
<script id="ActionTemplate" type="text/template">
    <button type="button" class="btn btn-xs btn-success text-light" onclick="ExecuteJobNow('{{:Id}}')">@T("ExecuteNow")</button>
    {{if Paused}}
    <button type="button" class="btn btn-xs btn-success text-light" onclick="PauseResumeJob('{{:Id}}', false)">@T("Resume")</button>
    {{else}}
    <button type="button" class="btn btn-xs btn-warning text-light" onclick="PauseResumeJob('{{:Id}}', true)">@T("Pause")</button>
    {{/if}}
</script>

@{
    Html.AddInlineScript(ResourceLocation.Footer,
@<script>
             function onBgJobsGridAction(args) {
                 if (args.requestType === "delete") {
                     //Delete record
                     args.cancel = true;
                     DeleteEntity(args.data.map(function(item){return item.Id;}), "@Url.Action("Delete")", refreshBgJobsGrid);
                 } else if (args.requestType === "beginedit") {
                     args.cancel = true;
                     PopupWindows('@Url.Action("Editor")', 'BGJobEditor', 770, 500, { id: args.rowData.Id }, 'get');
                 }
             }

             function ExecuteJobNow(jobId) {
                 $('#LoadingPanel').show();
                 $.ajax({
                     type: "POST",
                     url: "@Url.Action("ExecuteJobNow")",
                     data: {
                         jobId: jobId
                     },
                     error: function(xhr, status, error) {
                         ErrorAlert('@T("Error")', '@T("ServerConnectionError")');
                     },
                     success: function(response) {
                         if (response === 'OK') {
                             refreshBgJobsGrid();
                         } else {
                             ErrorAlert('@T("Error")', response);
                         }
                     },
                     complete: function() {
                         $('#LoadingPanel').hide();
                     }
                 });
             }

             function PauseResumeJob(jobId, pause) {
                 $('#LoadingPanel').show();
                 $.ajax({
                     type: "POST",
                     url: "@Url.Action("PauseResumeJob")",
                     data: {
                         jobId: jobId,
                         pause: pause
                     },
                     error: function(xhr, status, error) {
                         ErrorAlert('@T("Error")', '@T("ServerConnectionError")');
                     },
                     success: function(response) {
                         if (response === 'OK') {
                             refreshBgJobsGrid();
                         } else {
                             ErrorAlert('@T("Error")', response);
                         }
                     },
                     complete: function() {
                         $('#LoadingPanel').hide();
                     }
                 });
             }

             function refreshBgJobsGrid() {
                 $("#BgJobsGrid").ejGrid("refreshContent");
             }
</script>);
}