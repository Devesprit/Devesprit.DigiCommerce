@using System.Web.Mvc.Html
@using Devesprit.DigiCommerce.Models.Post
@using Devesprit.Utilities
@using Devesprit.Utilities.Extensions
@using X.PagedList.Mvc
@model Devesprit.DigiCommerce.Models.Post.PostsListModel
@{
    Layout = null;

    if (Model.ShowPager)
    {
        if (!Model.PostsList.IsFirstPage)
        {
            Html.AddHeadCustomParts("<meta name=\"prev\" content=\"" + GeneratePageUrl(Model.PageIndex - 1).GetAbsoluteUrl() + "\">");
        }
        if (!Model.PostsList.IsLastPage)
        {
            Html.AddHeadCustomParts("<meta name=\"next\" content=\"" + GeneratePageUrl(Model.PageIndex + 1).GetAbsoluteUrl() + "\">");
        }
    }
}
@if (Model.PostsList.Any())
{
    <div class="row">

        @foreach (var post in Model.PostsList)
        {
            @Html.Raw(Model.ItemWrapperStart)
            Html.RenderAction("PostCardViewPartialView", "Post", new { model = post, style = Model.ViewStyle });
            @Html.Raw(Model.ItemWrapperEnd)
        }
    </div>
    if (Model.ShowPager)
    {
        <div class="row">
            <div class="col-12 t-mar-30">
                @Html.PagedListPager(Model.PostsList, GeneratePageUrl, new TwitterBootstrap4Pager())
            </div>
        </div>
    }
}
else
{
    <h5 class="text-center text-muted mar-v-150">
        <i class="fa fa-frown-o fa-2x" aria-hidden="true"></i>
        <br />
        <br />
        @T("NoItemsToShow")
    </h5>
}

@functions {
    private string GeneratePageUrl(int arg)
    {
        var httpContext = HttpContext.Current.GetOwinContext().Get<System.Web.HttpContextWrapper>("System.Web.HttpContextBase");
        var route = ViewContext.ParentActionViewContext.RouteData.Route.GetRouteData(httpContext);
        if (route.Values.Keys.Contains("page"))
        {
            var routeData = ViewContext.ParentActionViewContext.RouteData.Values;
            routeData["page"] = arg;
            var queryStrings = Request.Url.Query;
            return Url.RouteUrl(routeData).BuildQueryStringUrl(new []{queryStrings}).RemoveEmptyParametersFromQueryString();
        }
        return Request.Url.ToString().BuildQueryStringUrl(new[] { "page=" + arg }).RemoveEmptyParametersFromQueryString();
    }
}