@using Devesprit.Core
@using reCaptcha
@model Devesprit.DigiCommerce.Models.Users.SignUpModel
@{
    ViewBag.Title = T("Signup");
    bool showSocialsPanel = Model.ExternalLoginProviders?.Any() == true;
    var workContext = DependencyResolver.Current.GetService<IWorkContext>();
    Html.AddCanonicalUrlParts(Url.Action("SignUp", "User", new { lang = workContext.CurrentLanguage.IsoCode }, Request.Url.Scheme));
    Html.AddHeadCustomParts("<meta name=\"robots\" content=\"index,follow\">");
}

<div class="container t-mar-35">
    <div class="row justify-content-center">
        <div class="col-12 @(showSocialsPanel ? "col-lg-10" : "col-lg-6")">
            <div class="panel">
                <div class="panel-title pad-10">
                    <h1 class="no-mar fs-18">@T("Signup")</h1>
                </div>
                <div class="row no-gutters">

                    @*Login/SignUp With Socials*@
                    @if (showSocialsPanel)
                    {
                        <div class="col-12 col-md-6 col-lg-4 bg-light rounded p-3">
                            <div class="row b-mar-20">
                                <div class="col-12 text-center">
                                    <p class="b-mar-20 text-muted">@T("SocialsSignup")</p>
                                    @using (Html.BeginForm("ExternalLogin", "User"))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="row">
                                            @foreach (var loginProvider in Model.ExternalLoginProviders.OrderByDescending(p => p.Order))
                                            {
                                                <div class="col-12">
                                                    @{ Html.RenderPartial(loginProvider.ProviderLoginBtnPartialUrl); }
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }

                    @*Login/SignUp With Form*@
                    <div class="col-12 @(showSocialsPanel ? "col-md-6 col-lg-8" : "") fs-14 p-3">
                        @using (Html.BeginForm("SignUp", "User", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-group b-mar-5">
                                @Html.LabelFor(p => p.FName)
                                @Html.TextBoxFor(p => p.FName, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(p => p.FName, "", new { @class = "form-text text-danger fs-12" })
                            </div>
                            <div class="form-group b-mar-5">
                                @Html.LabelFor(p => p.LName)
                                @Html.TextBoxFor(p => p.LName, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(p => p.LName, "", new { @class = "form-text text-danger fs-12" })
                            </div>
                            <div class="form-group b-mar-5">
                                @Html.LabelFor(p => p.Email)
                                @Html.TextBoxFor(p => p.Email, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(p => p.Email, "", new { @class = "form-text text-danger fs-12" })
                            </div>
                            <div class="form-group b-mar-5">
                                @Html.LabelFor(p => p.Password)
                                @Html.PasswordFor(p => p.Password, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(p => p.Password, "", new { @class = "form-text text-danger fs-12" })
                            </div>
                            <div class="form-group b-mar-5">
                                @Html.LabelFor(p => p.PasswordConfirm)
                                @Html.PasswordFor(p => p.PasswordConfirm, new { @class = "form-control form-control-sm" })
                                @Html.ValidationMessageFor(p => p.PasswordConfirm, "", new { @class = "form-text text-danger fs-12" })
                            </div>
                            <div class="form-group b-mar-10">
                                @Html.LabelFor(p => p.Country)
                                @Html.DropDownListFor(p => p.Country, Model.CountriesList, T("SelectCountry").ToString(), new { @class = "form-control custom-select form-control-sm" })
                                @Html.ValidationMessageFor(p => p.Country, "", new { @class = "form-text text-danger fs-12" })
                            </div>
                            if (Model.UserMustAcceptTerms)
                            {
                                <div class="form-group b-mar-5">
                                    <div class="custom-control custom-checkbox">
                                        @Html.CheckBoxFor(p => p.AcceptTerms, new { @class = "custom-control-input" })
                                        @Html.Raw(Server.HtmlDecode(Html.LabelFor(p => p.AcceptTerms, new { @class = "custom-control-label" }).ToString().FormatWith(Url.Action("TermsAndConditions", "Home", new { area = "" }))))
                                    </div>
                                    @Html.ValidationMessageFor(p => p.AcceptTerms, "", new { @class = "form-text text-danger fs-12" })
                                </div>
                            }
                            if (ViewBag.publicKey != null)
                            {
                                <div class="d-block b-mar-10 t-mar-10">
                                    @ReCaptcha.GetHtml(ViewBag.publicKey, lang: Model.CurrentLanguage.IsoCode)
                                </div>

                                if (ViewBag.RecaptchaLastErrors != null)
                                {
                                    <small class="form-text text-danger fs-12">@T("InvalidCaptcha")</small>
                                }
                            }
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="text-center">
                                <button type="submit" class="btn btn-success d-block m-auto t-mar-20 b-mar-10">@T("Signup")</button>
                            </div>
                        }
                        <div class="col-12 text-center t-mar-15">
                            <small class="fs-11 text-muted">@T("AlreadyRegistered") <a href="@Url.Action("Login")">@T("ClickHere")</a></small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
