//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Devesprit.Services.FileUploadServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileUploadServiceReference.IFileUploadService")]
    public interface IFileUploadService {
        
        // CODEGEN: Generating message contract since the wrapper name (UploadFileRequest) of message UploadFileRequest does not match the default value (UploadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/UploadFile", ReplyAction="http://tempuri.org/IFileUploadService/UploadFileResponse")]
        Devesprit.Services.FileUploadServiceReference.UploadFileResult UploadFile(Devesprit.Services.FileUploadServiceReference.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/UploadFile", ReplyAction="http://tempuri.org/IFileUploadService/UploadFileResponse")]
        System.Threading.Tasks.Task<Devesprit.Services.FileUploadServiceReference.UploadFileResult> UploadFileAsync(Devesprit.Services.FileUploadServiceReference.UploadFileRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/GetFileFromWeb", ReplyAction="http://tempuri.org/IFileUploadService/GetFileFromWebResponse")]
        System.IO.Stream GetFileFromWeb(string fileUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileUploadService/GetFileFromWeb", ReplyAction="http://tempuri.org/IFileUploadService/GetFileFromWebResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFileFromWebAsync(string fileUrl);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string UploadRequestKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public UploadFileRequest() {
        }
        
        public UploadFileRequest(string UploadRequestKey, System.IO.Stream FileByteStream) {
            this.UploadRequestKey = UploadRequestKey;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadFileResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadFileResult {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Md5Hash;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool Success;
        
        public UploadFileResult() {
        }
        
        public UploadFileResult(string Md5Hash, bool Success) {
            this.Md5Hash = Md5Hash;
            this.Success = Success;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileUploadServiceChannel : Devesprit.Services.FileUploadServiceReference.IFileUploadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileUploadServiceClient : System.ServiceModel.ClientBase<Devesprit.Services.FileUploadServiceReference.IFileUploadService>, Devesprit.Services.FileUploadServiceReference.IFileUploadService {
        
        public FileUploadServiceClient() {
        }
        
        public FileUploadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileUploadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileUploadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Devesprit.Services.FileUploadServiceReference.UploadFileResult Devesprit.Services.FileUploadServiceReference.IFileUploadService.UploadFile(Devesprit.Services.FileUploadServiceReference.UploadFileRequest request) {
            return base.Channel.UploadFile(request);
        }
        
        public string UploadFile(string UploadRequestKey, System.IO.Stream FileByteStream, out bool Success) {
            Devesprit.Services.FileUploadServiceReference.UploadFileRequest inValue = new Devesprit.Services.FileUploadServiceReference.UploadFileRequest();
            inValue.UploadRequestKey = UploadRequestKey;
            inValue.FileByteStream = FileByteStream;
            Devesprit.Services.FileUploadServiceReference.UploadFileResult retVal = ((Devesprit.Services.FileUploadServiceReference.IFileUploadService)(this)).UploadFile(inValue);
            Success = retVal.Success;
            return retVal.Md5Hash;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Devesprit.Services.FileUploadServiceReference.UploadFileResult> Devesprit.Services.FileUploadServiceReference.IFileUploadService.UploadFileAsync(Devesprit.Services.FileUploadServiceReference.UploadFileRequest request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<Devesprit.Services.FileUploadServiceReference.UploadFileResult> UploadFileAsync(string UploadRequestKey, System.IO.Stream FileByteStream) {
            Devesprit.Services.FileUploadServiceReference.UploadFileRequest inValue = new Devesprit.Services.FileUploadServiceReference.UploadFileRequest();
            inValue.UploadRequestKey = UploadRequestKey;
            inValue.FileByteStream = FileByteStream;
            return ((Devesprit.Services.FileUploadServiceReference.IFileUploadService)(this)).UploadFileAsync(inValue);
        }
        
        public System.IO.Stream GetFileFromWeb(string fileUrl) {
            return base.Channel.GetFileFromWeb(fileUrl);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFileFromWebAsync(string fileUrl) {
            return base.Channel.GetFileFromWebAsync(fileUrl);
        }
    }
}
